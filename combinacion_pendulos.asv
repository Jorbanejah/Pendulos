%% Parámetros físicos
l         = 1;      % Pendulum length [m]
M         = 2;      % Cart mass [kg]
m         = 1;      % Pendulum mass [kg]
g         = 9.81;   % Gravity [m/s^2]
k         = 2;      % Spring constant [N/m]
c         = 0.2;    % attenuation [kg/s]
c_theta   = 0.05;   % Pivot attenuation [kg·m^2/s]
pivot_y   = 0.2;    % height pivot [m]
b         = 0.1;    % weight pivot [m]
%% ODE
t_span = linspace(0,10,800);           
y0     = [0; 0; pi/4; 0];              % [x; dx; theta; dtheta]
opts   = odeset('RelTol',1e-6,'AbsTol',1e-8); %Ode45 particular options

[t, z] = ode45(@(t,y) pendulum(t, y, g, l, m, M, k, c, c_theta),t_span, y0, opts);

%% Energies
x      = z(:,1);
dx     = z(:,2);
theta  = z(:,3);
dtheta = z(:,4);

T_car   = 0.5*M*dx.^2; %Kinetic energy cart
v_px    =  l*dtheta.*cos(theta);
v_py    =  l*dtheta.*sin(theta);
T_pend  = 0.5*m*(v_px.^2 + v_py.^2); %Kinetic energy pendulum
V_pend  =  m*g*l*(1 - cos(theta)); %Potencial energy pendulum
V_spring= 0.5*k*x.^2; %Potencial energy spring

E_total = T_car + T_pend + V_pend + V_spring;

figure('Name','Energías del sistema');
plot(t, E_total, 'k-', t, T_car,'b--', t, T_pend,'r--', t, V_pend,'g-.', t, V_spring,'m:');
legend('E_{total}','T_{carro}','T_{péndulo}','V_{péndulo}','V_{muelle}');
xlabel('Tiempo [s]')
ylabel('Energía [J]') 
grid on

%% Animation
nCoils = 12;    % Spiral number
L0     = 0.5;   % Rest ength spring

figure('Name','Animación carro-péndulo');
for i = 1:length(t)
    clf; hold on
    
    % Estado actual
    cart_x = x(i);
    th     = theta(i);

    % Coordenadas del péndulo
    pend_x = cart_x + l*sin(th);
    pend_y = pivot_y - l*cos(th);

    % Dibuja muelle dinámico
    Lcurr  = abs(cart_x) + 0.05;      % longitud actual
    tau    = linspace(0,1,200);
    sx     = tau * cart_x;           
    sy     = pivot_y + ...
             0.02*sin(2*pi*nCoils*(tau*L0/Lcurr));
    plot(sx, sy, 'g', 'LineWidth', 2);

    % Dibuja carro (cuadrado relleno)
    cx = [cart_x-b, cart_x+b, cart_x+b, cart_x-b];
    cy = [0,        0,        2*b,      2*b];
    fill(cx, cy, [0.2 0.6 1], 'EdgeColor','k','LineWidth',2);

    % Dibuja péndulo
    plot([cart_x pend_x],[pivot_y pend_y],'k-','LineWidth',2);
    plot(pend_x, pend_y,'ro','MarkerSize',8,'MarkerFaceColor','r');

    % Ejes y límites
    plot([-2 2],[0 0],'k','LineWidth',1.5);
    axis equal
    xlim([-1.5 1.5]), ylim([-1.2 1]);
    xlabel('x [m]'), ylabel('y [m]');
    drawnow
    hold off
end

%% Función dinámica con amortiguación
function dy = pendulum(~, y, g, L, m, M, k, c, c_theta)
    x     = y(1);
    dx    = y(2);
    th    = y(3);
    dth   = y(4);

    % Matriz de masas
    A = [M + m,       m*L*cos(th);
         m*L*cos(th), m*L^2      ];

    % Vector de fuerzas (incluye amortiguación)
    B = [ -k*x - c*dx + m*L*dth^2*sin(th) ;
          -m*g*L*sin(th) - c_theta*dth ];

    acc = A\B;
    ddx   = acc(1);
    ddth  = acc(2);

    dy = [ dx; ddx; dth; ddth ];
end